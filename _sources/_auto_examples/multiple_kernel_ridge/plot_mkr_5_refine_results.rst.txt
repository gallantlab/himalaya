
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/multiple_kernel_ridge/plot_mkr_5_refine_results.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__auto_examples_multiple_kernel_ridge_plot_mkr_5_refine_results.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_multiple_kernel_ridge_plot_mkr_5_refine_results.py:


Multiple-kernel ridge refining
==============================
This example demonstrates how to solve multiple-kernel ridge regression with
hyperparameter random search, then refine the results with hyperparameter
gradient descent.

.. GENERATED FROM PYTHON SOURCE LINES 8-18

.. code-block:: default

    import numpy as np

    from himalaya.backend import set_backend
    from himalaya.kernel_ridge import MultipleKernelRidgeCV
    from himalaya.kernel_ridge import Kernelizer
    from himalaya.kernel_ridge import ColumnKernelizer
    from himalaya.utils import generate_multikernel_dataset

    from sklearn.pipeline import make_pipeline








.. GENERATED FROM PYTHON SOURCE LINES 19-20

In this example, we use the ``cupy`` backend (GPU).

.. GENERATED FROM PYTHON SOURCE LINES 20-23

.. code-block:: default


    backend = set_backend("cupy")








.. GENERATED FROM PYTHON SOURCE LINES 24-25

We can display the ``scikit-learn`` pipeline with an HTML diagram.

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    from sklearn import set_config
    set_config(display='diagram')  # requires scikit-learn 0.23








.. GENERATED FROM PYTHON SOURCE LINES 29-35

Generate a random dataset
-------------------------
- X_train : array of shape (n_samples_train, n_features)
- X_test : array of shape (n_samples_test, n_features)
- Y_train : array of shape (n_samples_train, n_targets)
- Y_test : array of shape (n_samples_test, n_targets)

.. GENERATED FROM PYTHON SOURCE LINES 35-44

.. code-block:: default


    (X_train, X_test, Y_train, Y_test, kernel_weights_true,
     n_features_list) = generate_multikernel_dataset(n_kernels=4, n_targets=500,
                                                     n_samples_train=1000,
                                                     n_samples_test=300,
                                                     random_state=42)

    feature_names = [f"Feature space {ii}" for ii in range(len(n_features_list))]








.. GENERATED FROM PYTHON SOURCE LINES 45-47

Prepare the pipeline
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 47-60

.. code-block:: default


    # Find the start and end of each feature space X in Xs
    start_and_end = np.concatenate([[0], np.cumsum(n_features_list)])
    slices = [
        slice(start, end)
        for start, end in zip(start_and_end[:-1], start_and_end[1:])
    ]

    # Create a different ``Kernelizer`` for each feature space.
    kernelizers = [("space %d" % ii, Kernelizer(), slice_)
                   for ii, slice_ in enumerate(slices)]
    column_kernelizer = ColumnKernelizer(kernelizers)








.. GENERATED FROM PYTHON SOURCE LINES 61-65

Define the random-search model
------------------------------
We use very few iteration on purpose, to make the random search suboptimal,
and refine it with hyperparameter gradient descent.

.. GENERATED FROM PYTHON SOURCE LINES 65-75

.. code-block:: default


    solver_params = dict(n_iter=5, alphas=np.logspace(-10, 10, 41))

    model_1 = MultipleKernelRidgeCV(kernels="precomputed", solver="random_search",
                                    solver_params=solver_params, random_state=42)
    pipe_1 = make_pipeline(column_kernelizer, model_1)

    # Fit the model on all targets
    pipe_1.fit(X_train, Y_train)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [                                        ] 0% | 0.00 sec | 5 random sampling with cv |     [........                                ] 20% | 0.38 sec | 5 random sampling with cv |     [................                        ] 40% | 0.76 sec | 5 random sampling with cv |     [........................                ] 60% | 1.14 sec | 5 random sampling with cv |     [................................        ] 80% | 1.51 sec | 5 random sampling with cv |     [........................................] 100% | 1.88 sec | 5 random sampling with cv | 


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bd28e428-fc4f-479c-9334-11db05e83798 {color: black;background-color: white;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 pre{padding: 0;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-toggleable {background-color: white;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-item {z-index: 1;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-parallel-item:only-child::after {width: 0;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bd28e428-fc4f-479c-9334-11db05e83798 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-bd28e428-fc4f-479c-9334-11db05e83798" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="740e57be-4884-41bc-bb65-87f50747eee1" type="checkbox" ><label class="sk-toggleable__label" for="740e57be-4884-41bc-bb65-87f50747eee1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columnkernelizer',
                     ColumnKernelizer(transformers=[('space 0', Kernelizer(),
                                                     slice(0, 1000, None)),
                                                    ('space 1', Kernelizer(),
                                                     slice(1000, 2000, None)),
                                                    ('space 2', Kernelizer(),
                                                     slice(2000, 3000, None)),
                                                    ('space 3', Kernelizer(),
                                                     slice(3000, 4000, None))])),
                    ('multiplekernelridgecv',
                     MultipleKernelRidgeCV(kernels='precomputed', random_state=42,
                                           solver_params=...
           1.00000000e-02, 3.16227766e-02, 1.00000000e-01, 3.16227766e-01,
           1.00000000e+00, 3.16227766e+00, 1.00000000e+01, 3.16227766e+01,
           1.00000000e+02, 3.16227766e+02, 1.00000000e+03, 3.16227766e+03,
           1.00000000e+04, 3.16227766e+04, 1.00000000e+05, 3.16227766e+05,
           1.00000000e+06, 3.16227766e+06, 1.00000000e+07, 3.16227766e+07,
           1.00000000e+08, 3.16227766e+08, 1.00000000e+09, 3.16227766e+09,
           1.00000000e+10]),
                                                          'n_iter': 5}))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a28ad50-40e9-4792-b539-e07ea2f98d44" type="checkbox" ><label class="sk-toggleable__label" for="6a28ad50-40e9-4792-b539-e07ea2f98d44">columnkernelizer: ColumnKernelizer</label><div class="sk-toggleable__content"><pre>ColumnKernelizer(transformers=[('space 0', Kernelizer(), slice(0, 1000, None)),
                                   ('space 1', Kernelizer(),
                                    slice(1000, 2000, None)),
                                   ('space 2', Kernelizer(),
                                    slice(2000, 3000, None)),
                                   ('space 3', Kernelizer(),
                                    slice(3000, 4000, None))])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f17b993-2b88-4a31-a738-6efa4d2e9c26" type="checkbox" ><label class="sk-toggleable__label" for="8f17b993-2b88-4a31-a738-6efa4d2e9c26">space 0</label><div class="sk-toggleable__content"><pre>slice(0, 1000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0db08e65-c22e-4410-a615-1da85fe75d2b" type="checkbox" ><label class="sk-toggleable__label" for="0db08e65-c22e-4410-a615-1da85fe75d2b">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6284c5de-c117-46b9-8114-4d9318773df6" type="checkbox" ><label class="sk-toggleable__label" for="6284c5de-c117-46b9-8114-4d9318773df6">space 1</label><div class="sk-toggleable__content"><pre>slice(1000, 2000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ac114ae-0b30-40df-a193-0d73e5c0e28c" type="checkbox" ><label class="sk-toggleable__label" for="5ac114ae-0b30-40df-a193-0d73e5c0e28c">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="debb4cb3-aa06-479a-83b2-180819edcec4" type="checkbox" ><label class="sk-toggleable__label" for="debb4cb3-aa06-479a-83b2-180819edcec4">space 2</label><div class="sk-toggleable__content"><pre>slice(2000, 3000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="489edfc1-f6a6-4f3a-bca7-f87e662c8aaf" type="checkbox" ><label class="sk-toggleable__label" for="489edfc1-f6a6-4f3a-bca7-f87e662c8aaf">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57e5e71c-5c86-49b6-8384-0d9157df63c4" type="checkbox" ><label class="sk-toggleable__label" for="57e5e71c-5c86-49b6-8384-0d9157df63c4">space 3</label><div class="sk-toggleable__content"><pre>slice(3000, 4000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="096434ce-84a5-4f05-91a2-9ab0c27b98a8" type="checkbox" ><label class="sk-toggleable__label" for="096434ce-84a5-4f05-91a2-9ab0c27b98a8">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b61adc2-5f5a-4808-a9b0-ee86b1accb6f" type="checkbox" ><label class="sk-toggleable__label" for="8b61adc2-5f5a-4808-a9b0-ee86b1accb6f">MultipleKernelRidgeCV</label><div class="sk-toggleable__content"><pre>MultipleKernelRidgeCV(kernels='precomputed', random_state=42,
                          solver_params={'alphas': array([1.00000000e-10, 3.16227766e-10, 1.00000000e-09, 3.16227766e-09,
           1.00000000e-08, 3.16227766e-08, 1.00000000e-07, 3.16227766e-07,
           1.00000000e-06, 3.16227766e-06, 1.00000000e-05, 3.16227766e-05,
           1.00000000e-04, 3.16227766e-04, 1.00000000e-03, 3.16227766e-03,
           1.00000000e-02, 3.16...0e-01, 3.16227766e-01,
           1.00000000e+00, 3.16227766e+00, 1.00000000e+01, 3.16227766e+01,
           1.00000000e+02, 3.16227766e+02, 1.00000000e+03, 3.16227766e+03,
           1.00000000e+04, 3.16227766e+04, 1.00000000e+05, 3.16227766e+05,
           1.00000000e+06, 3.16227766e+06, 1.00000000e+07, 3.16227766e+07,
           1.00000000e+08, 3.16227766e+08, 1.00000000e+09, 3.16227766e+09,
           1.00000000e+10]),
                                         'n_iter': 5})</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 76-78

Define the gradient-descent model
---------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 78-87

.. code-block:: default


    solver_params = dict(max_iter=100, hyper_gradient_method="direct",
                         max_iter_inner_hyper=10,
                         initial_deltas="here_will_go_the_previous_deltas")

    model_2 = MultipleKernelRidgeCV(kernels="precomputed", solver="hyper_gradient",
                                    solver_params=solver_params)
    pipe_2 = make_pipeline(column_kernelizer, model_2)








.. GENERATED FROM PYTHON SOURCE LINES 88-90

Use the random-search to initialize the gradient-descent
--------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 90-100

.. code-block:: default


    # We might want to refine only the best predicting targets, since the
    # hyperparameter gradient descent is less efficient over many targets.
    top = 60  # top 60%
    best_cv_scores = backend.to_numpy(pipe_1[-1].cv_scores_.max(0))
    mask = best_cv_scores > np.percentile(best_cv_scores, 100 - top)

    pipe_2[-1].solver_params['initial_deltas'] = pipe_1[-1].deltas_[:, mask]
    pipe_2.fit(X_train, Y_train[:, mask])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [                                        ] 0% | 0.00 sec | hypergradient_direct |     [                                        ] 0% | 0.00 sec | hypergradient_direct |     [                                        ] 1% | 0.53 sec | hypergradient_direct |     [                                        ] 2% | 0.63 sec | hypergradient_direct |     [.                                       ] 3% | 0.74 sec | hypergradient_direct |     [.                                       ] 4% | 0.86 sec | hypergradient_direct |     [..                                      ] 5% | 0.96 sec | hypergradient_direct |     [..                                      ] 6% | 1.08 sec | hypergradient_direct |     [..                                      ] 7% | 1.18 sec | hypergradient_direct |     [...                                     ] 8% | 1.29 sec | hypergradient_direct |     [...                                     ] 9% | 1.41 sec | hypergradient_direct |     [....                                    ] 10% | 1.51 sec | hypergradient_direct |     [....                                    ] 11% | 1.62 sec | hypergradient_direct |     [....                                    ] 12% | 1.73 sec | hypergradient_direct |     [.....                                   ] 13% | 1.83 sec | hypergradient_direct |     [.....                                   ] 14% | 1.94 sec | hypergradient_direct |     [......                                  ] 15% | 2.04 sec | hypergradient_direct |     [......                                  ] 16% | 2.15 sec | hypergradient_direct |     [......                                  ] 17% | 2.26 sec | hypergradient_direct |     [.......                                 ] 18% | 2.37 sec | hypergradient_direct |     [.......                                 ] 19% | 2.47 sec | hypergradient_direct |     [........                                ] 20% | 2.58 sec | hypergradient_direct |     [........                                ] 21% | 2.69 sec | hypergradient_direct |     [........                                ] 22% | 2.79 sec | hypergradient_direct |     [.........                               ] 23% | 2.90 sec | hypergradient_direct |     [.........                               ] 24% | 3.01 sec | hypergradient_direct |     [..........                              ] 25% | 3.12 sec | hypergradient_direct |     [..........                              ] 26% | 3.23 sec | hypergradient_direct |     [..........                              ] 27% | 3.33 sec | hypergradient_direct |     [...........                             ] 28% | 3.44 sec | hypergradient_direct |     [...........                             ] 29% | 3.55 sec | hypergradient_direct |     [............                            ] 30% | 3.65 sec | hypergradient_direct |     [............                            ] 31% | 3.76 sec | hypergradient_direct |     [............                            ] 32% | 3.88 sec | hypergradient_direct |     [.............                           ] 33% | 3.99 sec | hypergradient_direct |     [.............                           ] 34% | 4.09 sec | hypergradient_direct |     [..............                          ] 35% | 4.20 sec | hypergradient_direct |     [..............                          ] 36% | 4.31 sec | hypergradient_direct |     [..............                          ] 37% | 4.41 sec | hypergradient_direct |     [...............                         ] 38% | 4.52 sec | hypergradient_direct |     [...............                         ] 39% | 4.62 sec | hypergradient_direct |     [................                        ] 40% | 4.73 sec | hypergradient_direct |     [................                        ] 41% | 4.83 sec | hypergradient_direct |     [................                        ] 42% | 4.94 sec | hypergradient_direct |     [.................                       ] 43% | 5.05 sec | hypergradient_direct |     [.................                       ] 44% | 5.16 sec | hypergradient_direct |     [..................                      ] 45% | 5.26 sec | hypergradient_direct |     [..................                      ] 46% | 5.37 sec | hypergradient_direct |     [..................                      ] 47% | 5.47 sec | hypergradient_direct |     [...................                     ] 48% | 5.58 sec | hypergradient_direct |     [...................                     ] 49% | 5.69 sec | hypergradient_direct |     [....................                    ] 50% | 5.79 sec | hypergradient_direct |     [....................                    ] 51% | 5.90 sec | hypergradient_direct |     [....................                    ] 52% | 6.01 sec | hypergradient_direct |     [.....................                   ] 53% | 6.11 sec | hypergradient_direct |     [.....................                   ] 54% | 6.22 sec | hypergradient_direct |     [......................                  ] 55% | 6.32 sec | hypergradient_direct |     [......................                  ] 56% | 6.43 sec | hypergradient_direct |     [......................                  ] 57% | 6.53 sec | hypergradient_direct |     [.......................                 ] 58% | 6.66 sec | hypergradient_direct |     [.......................                 ] 59% | 6.76 sec | hypergradient_direct |     [........................                ] 60% | 6.87 sec | hypergradient_direct |     [........................                ] 61% | 6.97 sec | hypergradient_direct |     [........................                ] 62% | 7.08 sec | hypergradient_direct |     [.........................               ] 63% | 7.19 sec | hypergradient_direct |     [.........................               ] 64% | 7.30 sec | hypergradient_direct |     [..........................              ] 65% | 7.41 sec | hypergradient_direct |     [..........................              ] 66% | 7.51 sec | hypergradient_direct |     [..........................              ] 67% | 7.62 sec | hypergradient_direct |     [...........................             ] 68% | 7.72 sec | hypergradient_direct |     [...........................             ] 69% | 7.83 sec | hypergradient_direct |     [............................            ] 70% | 7.93 sec | hypergradient_direct |     [............................            ] 71% | 8.04 sec | hypergradient_direct |     [............................            ] 72% | 8.15 sec | hypergradient_direct |     [.............................           ] 73% | 8.25 sec | hypergradient_direct |     [.............................           ] 74% | 8.36 sec | hypergradient_direct |     [..............................          ] 75% | 8.47 sec | hypergradient_direct |     [..............................          ] 76% | 8.57 sec | hypergradient_direct |     [..............................          ] 77% | 8.68 sec | hypergradient_direct |     [...............................         ] 78% | 8.79 sec | hypergradient_direct |     [...............................         ] 79% | 8.89 sec | hypergradient_direct |     [................................        ] 80% | 9.00 sec | hypergradient_direct |     [................................        ] 81% | 9.10 sec | hypergradient_direct |     [................................        ] 82% | 9.21 sec | hypergradient_direct |     [.................................       ] 83% | 9.32 sec | hypergradient_direct |     [.................................       ] 84% | 9.43 sec | hypergradient_direct |     [..................................      ] 85% | 9.53 sec | hypergradient_direct |     [..................................      ] 86% | 9.64 sec | hypergradient_direct |     [..................................      ] 87% | 9.74 sec | hypergradient_direct |     [...................................     ] 88% | 9.85 sec | hypergradient_direct |     [...................................     ] 89% | 9.96 sec | hypergradient_direct |     [....................................    ] 90% | 10.06 sec | hypergradient_direct |     [....................................    ] 91% | 10.17 sec | hypergradient_direct |     [....................................    ] 92% | 10.27 sec | hypergradient_direct |     [.....................................   ] 93% | 10.38 sec | hypergradient_direct |     [.....................................   ] 94% | 10.48 sec | hypergradient_direct |     [......................................  ] 95% | 10.59 sec | hypergradient_direct |     [......................................  ] 96% | 10.70 sec | hypergradient_direct |     [......................................  ] 97% | 10.80 sec | hypergradient_direct |     [....................................... ] 98% | 10.91 sec | hypergradient_direct |     [....................................... ] 99% | 11.01 sec | hypergradient_direct |     [........................................] 100% | 11.30 sec | hypergradient_direct | 


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae {color: black;background-color: white;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae pre{padding: 0;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-toggleable {background-color: white;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-estimator:hover {background-color: #d4ebff;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-item {z-index: 1;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-parallel-item:only-child::after {width: 0;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae div.sk-container {display: inline-block;position: relative;}</style><div id="sk-7e3220e9-fb43-4ac2-97e8-c5582a1f5dae" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="307e1940-1e7c-43e5-bf44-47bec4380125" type="checkbox" ><label class="sk-toggleable__label" for="307e1940-1e7c-43e5-bf44-47bec4380125">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columnkernelizer',
                     ColumnKernelizer(transformers=[('space 0', Kernelizer(),
                                                     slice(0, 1000, None)),
                                                    ('space 1', Kernelizer(),
                                                     slice(1000, 2000, None)),
                                                    ('space 2', Kernelizer(),
                                                     slice(2000, 3000, None)),
                                                    ('space 3', Kernelizer(),
                                                     slice(3000, 4000, None))])),
                    ('multiplekernelridgecv',
                     MultipleKernelRidgeCV(kernels='precomputed',
                                           solver='hyper_gradient',
                                           solver...
                                                          'initial_deltas': array([[  9.888181 ,  -7.898777 ,   7.068026 , ...,  22.19144  ,
             -9.05007  ,  -5.596192 ],
           [ 10.814667 , -41.64126  , -26.674456 , ...,  19.253895 ,
            -42.792553 , -39.338673 ],
           [  8.882457 ,  -4.642997 ,  10.323807 , ...,  22.232725 ,
             -5.794289 ,  -2.3404117],
           [ 10.058536 , -19.856195 ,  -4.889392 , ...,  20.622723 ,
            -21.007488 , -17.55361  ]], dtype=float32),
                                                          'max_iter': 100,
                                                          'max_iter_inner_hyper': 10}))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9346ba79-2480-4c23-b392-202ce2295be1" type="checkbox" ><label class="sk-toggleable__label" for="9346ba79-2480-4c23-b392-202ce2295be1">columnkernelizer: ColumnKernelizer</label><div class="sk-toggleable__content"><pre>ColumnKernelizer(transformers=[('space 0', Kernelizer(), slice(0, 1000, None)),
                                   ('space 1', Kernelizer(),
                                    slice(1000, 2000, None)),
                                   ('space 2', Kernelizer(),
                                    slice(2000, 3000, None)),
                                   ('space 3', Kernelizer(),
                                    slice(3000, 4000, None))])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3700b6d3-4e03-4d54-8671-878a09b954d6" type="checkbox" ><label class="sk-toggleable__label" for="3700b6d3-4e03-4d54-8671-878a09b954d6">space 0</label><div class="sk-toggleable__content"><pre>slice(0, 1000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6ba616e-3dc5-4d96-a810-f2da6706bff0" type="checkbox" ><label class="sk-toggleable__label" for="f6ba616e-3dc5-4d96-a810-f2da6706bff0">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="839940e3-ffae-4d10-a0a7-fe25e5b5d4e3" type="checkbox" ><label class="sk-toggleable__label" for="839940e3-ffae-4d10-a0a7-fe25e5b5d4e3">space 1</label><div class="sk-toggleable__content"><pre>slice(1000, 2000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d3d59d9-b9ed-458c-ab37-e605820c9698" type="checkbox" ><label class="sk-toggleable__label" for="4d3d59d9-b9ed-458c-ab37-e605820c9698">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e62f9f9-0131-486b-93a3-d7d36a26d56c" type="checkbox" ><label class="sk-toggleable__label" for="7e62f9f9-0131-486b-93a3-d7d36a26d56c">space 2</label><div class="sk-toggleable__content"><pre>slice(2000, 3000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c07ba28-7c89-4347-9c0f-4495a4f87d02" type="checkbox" ><label class="sk-toggleable__label" for="6c07ba28-7c89-4347-9c0f-4495a4f87d02">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="431872ad-a4ee-44b4-ade3-ba9a23e3716b" type="checkbox" ><label class="sk-toggleable__label" for="431872ad-a4ee-44b4-ade3-ba9a23e3716b">space 3</label><div class="sk-toggleable__content"><pre>slice(3000, 4000, None)</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8589c826-b242-41ae-b993-c5c5ba77cce0" type="checkbox" ><label class="sk-toggleable__label" for="8589c826-b242-41ae-b993-c5c5ba77cce0">Kernelizer</label><div class="sk-toggleable__content"><pre>Kernelizer()</pre></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7baf8b91-4d2b-433f-ab17-3d6b063a8fe3" type="checkbox" ><label class="sk-toggleable__label" for="7baf8b91-4d2b-433f-ab17-3d6b063a8fe3">MultipleKernelRidgeCV</label><div class="sk-toggleable__content"><pre>MultipleKernelRidgeCV(kernels='precomputed', solver='hyper_gradient',
                          solver_params={'hyper_gradient_method': 'direct',
                                         'initial_deltas': array([[  9.888181 ,  -7.898777 ,   7.068026 , ...,  22.19144  ,
             -9.05007  ,  -5.596192 ],
           [ 10.814667 , -41.64126  , -26.674456 , ...,  19.253895 ,
            -42.792553 , -39.338673 ],
           [  8.882457 ,  -4.642997 ,  10.323807 , ...,  22.232725 ,
             -5.794289 ,  -2.3404117],
           [ 10.058536 , -19.856195 ,  -4.889392 , ...,  20.622723 ,
            -21.007488 , -17.55361  ]], dtype=float32),
                                         'max_iter': 100,
                                         'max_iter_inner_hyper': 10})</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 101-103

Compute predictions on a test set
---------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 103-123

.. code-block:: default

    import matplotlib.pyplot as plt

    # use the first model for all targets
    test_scores_1 = pipe_1.score(X_test, Y_test)

    # use the second model for the refined targets
    test_scores_2 = backend.copy(test_scores_1)
    test_scores_2[mask] = pipe_2.score(X_test, Y_test[:, mask])

    test_scores_1 = backend.to_numpy(test_scores_1)
    test_scores_2 = backend.to_numpy(test_scores_2)
    plt.figure(figsize=(4, 4))
    plt.scatter(test_scores_1, test_scores_2, alpha=0.3)
    plt.xlim(0, 1)
    plt.plot(plt.xlim(), plt.xlim(), color='k', lw=1)
    plt.xlabel(r"Base model")
    plt.ylabel(r"Refined model")
    plt.title("$R^2$ generalization score")
    plt.tight_layout()
    plt.show()



.. image:: /_auto_examples/multiple_kernel_ridge/images/sphx_glr_plot_mkr_5_refine_results_001.png
    :alt: $R^2$ generalization score
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.382 seconds)


.. _sphx_glr_download__auto_examples_multiple_kernel_ridge_plot_mkr_5_refine_results.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mkr_5_refine_results.py <plot_mkr_5_refine_results.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mkr_5_refine_results.ipynb <plot_mkr_5_refine_results.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
